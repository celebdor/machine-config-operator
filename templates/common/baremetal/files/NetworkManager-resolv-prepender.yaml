mode: 0755
path: "/etc/NetworkManager/dispatcher.d/30-resolv-prepender"
contents:
  inline: |
    #!/bin/bash
    set -eEo pipefail
    IFACE=$1
    STATUS=$2

    {{if .Proxy -}}
    {{if .Proxy.HTTPProxy -}}
    HTTP_PROXY={{.Proxy.HTTPProxy}}
    {{end -}}
    {{if .Proxy.HTTPSProxy -}}
    HTTPS_PROXY={{.Proxy.HTTPSProxy}}
    {{end -}}
    {{if .Proxy.NoProxy -}}
    NO_PROXY={{.Proxy.NoProxy}}
    {{end -}}
    {{end -}}

    case "$STATUS" in
        up|dhcp4-change|dhcp6-change)
        >&2 echo "NM resolv-prepender triggered by ${1} ${2}."

        # In DHCP connections, the resolv.conf content may be late, thus we wait for nameservers
        timeout 45s /bin/bash <<EOF
            if [[ "$STATUS" == dhcp* ]]; then
                >&2 echo  "NM resolv-prepender: Checking for nameservers in /var/run/NetworkManager/resolv.conf"
                while ! grep nameserver /var/run/NetworkManager/resolv.conf; do
                    >&2 echo  "NM resolv-prepender: NM resolv.conf still empty of nameserver"
                    sleep 0.5
                done
            fi
    EOF
        # Ensure resolv.conf exists and contains nameservers before we try to run podman
        if [[ ! -e /etc/resolv.conf ]] || ! grep -q nameserver /etc/resolv.conf; then
            cp /var/run/NetworkManager/resolv.conf /etc/resolv.conf
        fi


        NAMESERVER_IP=$(/usr/bin/podman run --rm \
            --authfile /var/lib/kubelet/config.json \
            --net=host \
            {{ .Images.baremetalRuntimeCfgImage }} \
            node-ip \
            show \
            "{{.Infra.Status.PlatformStatus.BareMetal.APIServerInternalIP}}" \
            "{{.Infra.Status.PlatformStatus.BareMetal.IngressIP}}")
        # check if we got DHCPv6 hostname. The value would usually be in
        # DHCP6_FQDN_FQDN but NM internal client does not parse the option
        # NM only parses it for IPv4
        if [[ "$NAMESERVER_IP" =~ ":" ]]; then
            LEASE_FILE=$(mktemp)
            readonly CONT_NAME="dhcpv6-hostname-workaround"

            trap "podman rm -f $CONT_NAME" ERR
            /usr/bin/podman run --rm -d --name "$CONT_NAME" \
                --authfile /var/lib/kubelet/config.json \
                --net=host \
                --entrypoint /usr/sbin/dhclient \
                -v "${LEASE_FILE}:/tmp/workaround.lease:Z" \
                {{ .Images.baremetalRuntimeCfgImage }} \
                -d  -sf /bin/true -lf /tmp/workaround.lease -6 -v -D LL "$IFACE"
            DHCPv6_DHCLIENT_TIMEOUT=15
            while : ; do
                mapfile -t NAME_DATA < <(awk '/(host|domain)-name / {print substr($3, 2, length($3) - 3)}' "$LEASE_FILE")
                if [[ ${#NAME_DATA[@]} -eq 2 ]]; then
                    hostnamectl set-hostname --static --transient "${NAME_DATA[0]}.${NAME_DATA[1]}"
                    break
                else
                    if [[ DHCPv6_DHCLIENT_TIMEOUT -gt 0 ]]; then
                        sleep 0.5
                        DHCPv6_DHCLIENT_TIMEOUT=$((DHCPv6_DHCLIENT_TIMEOUT - 1))
                    else
                        break
                    fi
                fi
            done
            podman rm -f "$CONT_NAME"
        fi

        DOMAIN="{{.Infra.Status.EtcdDiscoveryDomain}}"
        if [[ -n "$NAMESERVER_IP" ]]; then
            >&2 echo "NM resolv-prepender: Prepending 'nameserver $NAMESERVER_IP' to /etc/resolv.conf (other nameservers from /var/run/NetworkManager/resolv.conf)"
            sed -e "/^search/d" \
                -e "/Generated by/c# Generated by KNI resolv prepender NM dispatcher script\nsearch $DOMAIN\nnameserver $NAMESERVER_IP" \
                /var/run/NetworkManager/resolv.conf > /etc/resolv.tmp
        fi
        # Only leave the first 3 nameservers in /etc/resolv.conf
        sed -i ':a $!{N; ba}; s/\(^\|\n\)nameserver/\n# nameserver/4g' /etc/resolv.tmp
        mv -f /etc/resolv.tmp /etc/resolv.conf
        ;;
        *)
        ;;
    esac
